(()=>{"use strict";var e={d:(t,n)=>{for(var o in n)e.o(n,o)&&!e.o(t,o)&&Object.defineProperty(t,o,{enumerable:!0,get:n[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{cF:()=>f,HR:()=>h,rs:()=>I});const n=e=>{let t=["Task Name","Description","Project","Due Date","Priority",""],n=document.getElementById("task-table"),l=document.createElement("tr");n.prepend(l);for(let e=0;e<t.length;e++){let n=document.createElement("th");n.innerHTML=t[e],l.appendChild(n)}for(let t=0;t<e.length;t++)o(t,e);const r=document.getElementsByClassName("del-btn");for(let e=0;e<r.length;e++)r[e].addEventListener("click",i);const a=document.getElementsByClassName("edit-btn");for(let e=0;e<a.length;e++)a[e].addEventListener("click",k);const s=document.getElementsByClassName("comp-btn");for(let e=0;e<s.length;e++)s[e].id,s[e].addEventListener("click",d)},o=(e,t)=>{let n=document.querySelector("#task-table-body"),o=t[e].id,l=document.createElement("tr");1==t[e].complete&&l.classList.add("complete"),l.setAttribute("data-key",o),l.id="task-"+o,l.classList.add("task-item");let i=document.createElement("td");i.innerHTML=t[e].taskName,l.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,l.appendChild(d);let r=document.createElement("td");r.innerHTML=t[e].project,l.appendChild(r);let a=document.createElement("td"),s=t[e].dueDate.split("-"),c=s[1]+"-"+s[2]+"-"+s[0];a.innerHTML=c,l.appendChild(a);let m=document.createElement("td");m.innerHTML=t[e].priority,l.appendChild(m);let u=document.createElement("td");u.setAttribute("data-key",o);let p=document.createElement("button");u.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-check"></i>',p.classList.add("comp-btn"),p.id=o;let y=document.createElement("button");u.appendChild(y),y.setAttribute("type","button"),y.innerHTML='<i class="fa-solid fa-trash"></i>',y.classList.add("del-btn");let g=document.createElement("button");u.appendChild(g),g.setAttribute("type","button"),g.innerHTML='<i class="fa-solid fa-pencil"></i>',g.classList.add("edit-btn"),l.appendChild(u),n.appendChild(l)},l=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},i=e=>{let t=e.target.parentNode.parentNode.getAttribute("data-key"),n="task-"+L.masterList.indexOf(L.masterList.find((e=>e.id==t))),o=L.masterList.filter((e=>e.id!=t));L.masterList=o,b(),r(),localStorage.removeItem(n)},d=e=>{let t=e.target.parentNode.parentNode.getAttribute("data-key"),n='[data-key="'+t+'"]',o=document.querySelector(n);for(let e=0;e<L.masterList.length;e++)L.masterList[e].id==t&&(!1===L.masterList[e].complete?(o.classList.add("complete"),L.masterList[e].complete=!0):!0===L.masterList[e].complete&&(o.classList.remove("complete"),L.masterList[e].complete=!1))},r=()=>{l(),c(),n(L.masterList)},a=e=>{if(c(),"default"===e&&(l(),n(L.masterList)),"lowToHigh"===e&&(l(),n(L.lowPrio),n(L.medPrio),n(L.highPrio)),"highToLow"===e&&(l(),n(L.highPrio),n(L.medPrio),n(L.lowPrio)),"projectSorting"===e){l();for(let e=0;e<L.projects.length;e++){let t=L.masterList.filter((t=>t.project==L.projects[e]));n(t.filter((e=>"High"===e.priority))),n(t.filter((e=>"Medium"===e.priority))),n(t.filter((e=>"Low"===e.priority)))}}},s=()=>{let e=document.getElementById("projectInput"),t=document.getElementById("projectEdit");for(;e.childNodes.length>2;)e.removeChild(e.lastChild);for(;t.childNodes.length>2;)t.removeChild(t.lastChild);for(let t=0;t<L.projects.length;t++){let n=document.createElement("option");n.value=L.projects[t],n.innerHTML=L.projects[t],e.appendChild(n)}for(let e=0;e<L.projects.length;e++){let n=document.createElement("option");n.value=L.projects[e],n.innerHTML=L.projects[e],t.appendChild(n)}},c=()=>{let e=document.getElementById("task-table");e.removeChild(e.firstChild)},m=()=>{document.getElementById("task-table-body");for(let e=1;e<L.projects.length;e++)u(e);const e=document.getElementsByClassName("del-btn");for(let t=0;t<e.length;t++)e[t].addEventListener("click",g);const t=document.getElementsByClassName("edit-btn");for(let e=0;e<t.length;e++)t[e].addEventListener("click",E)},u=e=>{let t=document.querySelector("#task-table-body"),n=document.createElement("tr");n.setAttribute("data-key",e),n.id="task-"+e,n.classList.add("task-item");let o=document.createElement("td");o.innerHTML=L.projects[e],n.appendChild(o);let l=document.createElement("td");l.id=e,l.setAttribute("data-key",e);let i=document.createElement("button");l.appendChild(i),i.setAttribute("type","button"),i.innerHTML='<i class="fa-solid fa-trash"></i>',i.classList.add("del-btn"),i.id=e;let d=document.createElement("button");l.appendChild(d),d.setAttribute("type","button"),d.innerHTML='<i class="fa-solid fa-pencil"></i>',d.classList.add("edit-btn"),d.id=e,n.appendChild(l),t.appendChild(n)},p=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},y=()=>{p(),m()},g=e=>{let t=e.target.parentNode.id,n=L.projects[t],o=L.projects.filter((e=>e!=n));L.projects=o,y();let l="project-"+t;localStorage.removeItem(l)},E=e=>{let t=document.getElementById("editProjectModal");t.style.display="block";let n=e.target.parentNode.id,o=L.projects[n];document.getElementById("editProjectName").value=o,document.getElementById("submit-project-edit-btn").onclick=function(){L.projects[n]=document.getElementById("editProjectName").value;let e=document.getElementById("editProjectName").value;for(let t=0;t<L.masterList.length;t++)L.masterList[t].project===o&&(L.masterList[t].project=e);t.style.display="none",y();let l="project-"+n;localStorage.removeItem(l),localStorage.setItem(l,L.projects[n])}},h=(e,t)=>{let n="project-"+e;localStorage.setItem(n,t)},I=(e,t)=>{let n="task-"+e,o=JSON.stringify(t);localStorage.setItem(n,o)},f=()=>{Object.keys(localStorage).forEach((function(e){if(e.includes("task")){const t=JSON.parse(localStorage.getItem(e));let n=new j(t.taskName,t.description,t.dueDate,t.priority,t.project);L.masterList.push(n)}e.includes("project")&&L.projects.push(localStorage.getItem(e))}))},L={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None"],viewingProjects:!1},b=()=>{L.highPrio=L.masterList.filter((e=>"High"===e.priority)),L.medPrio=L.masterList.filter((e=>"Medium"===e.priority)),L.lowPrio=L.masterList.filter((e=>"Low"===e.priority))},j=function(e,t,n,o,l){this.taskName=e,this.description=t,this.dueDate=n,this.priority=o,this.complete=!1,this.project=l,this.id=Math.floor(1e3*Math.random())},k=e=>{let t=document.getElementById("editModal");t.style.display="block";let n=e.target.parentNode.parentNode.getAttribute("data-key"),o=0;for(let e=0;e<L.masterList.length;e++)n==L.masterList[e].id&&(o=e);document.getElementById("taskNameEdit").value=L.masterList[o].taskName,document.getElementById("descriptionEdit").value=L.masterList[o].description,document.getElementById("dateEdit").value=L.masterList[o].dueDate,document.getElementById("priorityEdit").value=L.masterList[o].priority,document.getElementById("projectEdit").value=L.masterList[o].project,document.getElementById("submit-edit-btn").onclick=function(){L.masterList[o].taskName=document.getElementById("taskNameEdit").value,L.masterList[o].description=document.getElementById("descriptionEdit").value,L.masterList[o].dueDate=document.getElementById("dateEdit").value,L.masterList[o].priority=document.getElementById("priorityEdit").value,L.masterList[o].project=document.getElementById("projectEdit").value,L.highPrio=L.masterList.filter((e=>"High"===e.priority)),L.medPrio=L.masterList.filter((e=>"Medium"===e.priority)),L.lowPrio=L.masterList.filter((e=>"Low"===e.priority)),r(),t.style.display="none";let e="task-"+o;localStorage.removeItem(e),localStorage.setItem(e,JSON.stringify(L.masterList[o]))}};f(),b(),n(L.masterList),(()=>{let e=document.getElementById("taskModal"),o=document.getElementById("newTaskBtn"),i=document.getElementById("editModal"),d=document.getElementById("projectModal"),u=document.getElementById("newProject"),g=document.getElementById("sortModal"),E=document.getElementById("editProjectModal"),f=document.getElementById("submit-task-btn"),b=document.getElementById("sortType"),k=document.getElementById("submit-project-btn"),B=document.getElementById("project-view"),v=document.getElementById("all-tasks"),P=document.getElementById("complete-tasks"),N=document.getElementById("incomplete-tasks");u.onclick=function(){d.style.display="block"},o.onclick=function(){e.style.display="block"},window.onclick=function(t){t.target==e&&(e.style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0),t.target==i&&(i.style.display="none"),t.target==d&&(d.style.display="none",document.getElementById("projectName").value=""),t.target==g&&(g.style.display="none"),t.target==E&&(E.style.display="none")},f.onclick=function(){(()=>{let e=document.getElementById("taskNameInput").value,t=document.getElementById("descriptionInput").value,n=document.getElementById("dateInput").value,o=document.getElementById("priorityInput").value,l=document.getElementById("projectInput").value,i=new j(e,t,n,o,l);L.masterList.push(i),"Low"===i.priority&&L.lowPrio.push(i),"Medium"===i.priority&&L.medPrio.push(i),"High"===i.priority&&L.highPrio.push(i),!1===L.viewingProjects&&(!1===L.isSorted?r():a());let d=L.masterList.indexOf(i);I(d,i)})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},b.onchange=function(){let e=b.value;a(e)},k.onclick=function(){(()=>{let e=document.getElementById("projectName").value;L.projects.push(e);let n=L.projects.indexOf(e);h(n,e),(0,t.logLocal)(),1==L.viewingProjects&&y()})(),d.style.display="none",document.getElementById("projectName").value="",s()},B.onclick=function(){L.viewingProjects=!0,l(),c(),(()=>{let e=document.getElementById("task-table"),t=["Project Name",""],n=document.createElement("tr");e.prepend(n);for(let e=0;e<t.length;e++){let o=document.createElement("th");o.innerHTML=t[e],n.appendChild(o)}})(),m()},v.onclick=function(){L.viewingProjects=!1,c(),p(),n(L.masterList)},P.onclick=function(){L.viewingProjects=!1,c(),p(),n(L.masterList.filter((e=>1==e.complete)))},N.onclick=function(){L.viewingProjects=!1,c(),p(),n(L.masterList.filter((e=>0==e.complete)))}})(),s()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,