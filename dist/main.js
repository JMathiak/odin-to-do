(()=>{"use strict";const e=e=>{let o=["Task Name","Description","Project","Due Date","Priority",""],i=document.getElementById("task-table"),d=document.createElement("tr");i.prepend(d);for(let e=0;e<o.length;e++){let t=document.createElement("th");t.innerHTML=o[e],d.appendChild(t)}for(let o=0;o<e.length;o++)t(o,e);const r=document.getElementsByClassName("del-btn");for(let e=0;e<r.length;e++)r[e].addEventListener("click",l);const s=document.getElementsByClassName("edit-btn");for(let e=0;e<s.length;e++)s[e].addEventListener("click",L);const a=document.getElementsByClassName("comp-btn");for(let e=0;e<a.length;e++)console.log(a[e].id),a[e].id,a[e].addEventListener("click",n)},t=(e,t)=>{let o=document.querySelector("#task-table-body"),l=t[e].id,n=document.createElement("tr");1==t[e].complete&&n.classList.add("complete"),n.setAttribute("data-key",l),n.id="task-"+l,n.classList.add("task-item");let i=document.createElement("td");i.innerHTML=t[e].taskName,n.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let r=document.createElement("td");r.innerHTML=t[e].project,n.appendChild(r);let s=document.createElement("td"),a=t[e].dueDate.split("-"),c=a[1]+"-"+a[2]+"-"+a[0];s.innerHTML=c,n.appendChild(s);let m=document.createElement("td");m.innerHTML=t[e].priority,n.appendChild(m);let u=document.createElement("td");u.setAttribute("data-key",l);let p=document.createElement("button");u.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-check"></i>',p.classList.add("comp-btn"),p.id=l;let g=document.createElement("button");u.appendChild(g),g.setAttribute("type","button"),g.innerHTML='<i class="fa-solid fa-trash"></i>',g.classList.add("del-btn");let y=document.createElement("button");u.appendChild(y),y.setAttribute("type","button"),y.innerHTML='<i class="fa-solid fa-pencil"></i>',y.classList.add("edit-btn"),n.appendChild(u),o.appendChild(n)},o=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},l=e=>{let t=e.target.parentNode.parentNode.getAttribute("data-key"),o="task-"+E.masterList.indexOf(E.masterList.find((e=>e.id==t))),l=E.masterList.filter((e=>e.id!=t));E.masterList=l,h(),i(),localStorage.removeItem(o)},n=e=>{console.log("Complete Task");let t=e.target.parentNode.parentNode.getAttribute("data-key");console.log(t);let o='[data-key="'+t+'"]',l=document.querySelector(o);console.log(l);for(let e=0;e<E.masterList.length;e++)E.masterList[e].id==t&&(!1===E.masterList[e].complete?(l.classList.add("complete"),E.masterList[e].complete=!0):!0===E.masterList[e].complete&&(l.classList.remove("complete"),E.masterList[e].complete=!1));console.log(l.classList)},i=()=>{o(),s(),e(E.masterList)},d=t=>{if(s(),"default"===t&&(o(),e(E.masterList)),"lowToHigh"===t&&(o(),e(E.lowPrio),e(E.medPrio),e(E.highPrio)),"highToLow"===t&&(o(),e(E.highPrio),e(E.medPrio),e(E.lowPrio)),"projectSorting"===t){o();for(let t=0;t<E.projects.length;t++){let o=E.masterList.filter((e=>e.project==E.projects[t]));console.log(o),e(o.filter((e=>"High"===e.priority))),e(o.filter((e=>"Medium"===e.priority))),e(o.filter((e=>"Low"===e.priority)))}}},r=()=>{let e=document.getElementById("projectInput"),t=document.getElementById("projectEdit");for(;e.childNodes.length>2;)e.removeChild(e.lastChild);for(;t.childNodes.length>2;)t.removeChild(t.lastChild);for(let t=0;t<E.projects.length;t++){let o=document.createElement("option");o.value=E.projects[t],o.innerHTML=E.projects[t],e.appendChild(o)}for(let e=0;e<E.projects.length;e++){let o=document.createElement("option");o.value=E.projects[e],o.innerHTML=E.projects[e],t.appendChild(o)}},s=()=>{let e=document.getElementById("task-table");e.removeChild(e.firstChild)},a=()=>{document.getElementById("task-table-body");for(let e=1;e<E.projects.length;e++)c(e);const e=document.getElementsByClassName("del-btn");for(let t=0;t<e.length;t++)e[t].addEventListener("click",p);const t=document.getElementsByClassName("edit-btn");for(let e=0;e<t.length;e++)t[e].addEventListener("click",g)},c=e=>{let t=document.querySelector("#task-table-body"),o=document.createElement("tr");o.setAttribute("data-key",e),o.id="task-"+e,o.classList.add("task-item");let l=document.createElement("td");l.innerHTML=E.projects[e],o.appendChild(l);let n=document.createElement("td");n.id=e,n.setAttribute("data-key",e);let i=document.createElement("button");n.appendChild(i),i.setAttribute("type","button"),i.innerHTML='<i class="fa-solid fa-trash"></i>',i.classList.add("del-btn"),i.id=e;let d=document.createElement("button");n.appendChild(d),d.setAttribute("type","button"),d.innerHTML='<i class="fa-solid fa-pencil"></i>',d.classList.add("edit-btn"),d.id=e,o.appendChild(n),t.appendChild(o)},m=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},u=()=>{m(),a()},p=e=>{let t=e.target.parentNode.id;console.log(t);let o=E.projects[t];console.log(o);let l=E.projects.filter((e=>e!=o));E.projects=l,u();let n="project-"+t;localStorage.removeItem(n)},g=e=>{let t=document.getElementById("editProjectModal");t.style.display="block",console.log(t);let o=e.target.parentNode.id;console.log(e.target.parentNode);let l=E.projects[o];document.getElementById("editProjectName").value=l,document.getElementById("submit-project-edit-btn").onclick=function(){E.projects[o]=document.getElementById("editProjectName").value;let e=document.getElementById("editProjectName").value;for(let t=0;t<E.masterList.length;t++)E.masterList[t].project===l&&(E.masterList[t].project=e);t.style.display="none",u();let n="project-"+o;localStorage.removeItem(n),localStorage.setItem(n,E.projects[o])}},y=()=>{let e=localStorage.getItem("task-3");console.log(e)},E={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None"],viewingProjects:!1},h=()=>{E.highPrio=E.masterList.filter((e=>"High"===e.priority)),E.medPrio=E.masterList.filter((e=>"Medium"===e.priority)),E.lowPrio=E.masterList.filter((e=>"Low"===e.priority))},I=function(e,t,o,l,n){this.taskName=e,this.description=t,this.dueDate=o,this.priority=l,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},L=e=>{let t=document.getElementById("editModal");t.style.display="block";let o=e.target.parentNode.parentNode.getAttribute("data-key"),l=0;for(let e=0;e<E.masterList.length;e++)console.log("TDL ID",E.masterList[e].id),o==E.masterList[e].id&&(l=e);console.log("id ",o),console.log("index ",l),document.getElementById("taskNameEdit").value=E.masterList[l].taskName,document.getElementById("descriptionEdit").value=E.masterList[l].description,document.getElementById("dateEdit").value=E.masterList[l].dueDate,document.getElementById("priorityEdit").value=E.masterList[l].priority,document.getElementById("projectEdit").value=E.masterList[l].project,document.getElementById("submit-edit-btn").onclick=function(){E.masterList[l].taskName=document.getElementById("taskNameEdit").value,E.masterList[l].description=document.getElementById("descriptionEdit").value,E.masterList[l].dueDate=document.getElementById("dateEdit").value,E.masterList[l].priority=document.getElementById("priorityEdit").value,E.masterList[l].project=document.getElementById("projectEdit").value,E.highPrio=E.masterList.filter((e=>"High"===e.priority)),E.medPrio=E.masterList.filter((e=>"Medium"===e.priority)),E.lowPrio=E.masterList.filter((e=>"Low"===e.priority)),i(),t.style.display="none";let e="task-"+l;localStorage.removeItem(e),localStorage.setItem(e,JSON.stringify(E.masterList[l]))}};Object.keys(localStorage).forEach((function(e){if(console.log(localStorage.getItem(e)),e.includes("task")){const t=JSON.parse(localStorage.getItem(e));console.log(t);let o=new I(t.taskName,t.description,t.dueDate,t.priority,t.project);E.masterList.push(o)}e.includes("project")&&E.projects.push(localStorage.getItem(e))})),h(),e(E.masterList),(()=>{let t=document.getElementById("taskModal"),l=document.getElementById("newTaskBtn"),n=document.getElementById("editModal"),c=document.getElementById("projectModal"),p=document.getElementById("newProject"),g=document.getElementById("sortModal"),h=document.getElementById("editProjectModal"),L=document.getElementById("submit-task-btn"),f=document.getElementById("sortType"),k=document.getElementById("submit-project-btn"),j=document.getElementById("project-view"),B=document.getElementById("all-tasks"),b=document.getElementById("complete-tasks"),v=document.getElementById("incomplete-tasks");p.onclick=function(){c.style.display="block"},l.onclick=function(){t.style.display="block"},window.onclick=function(e){e.target==t&&(console.log("close modal"),t.style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0),e.target==n&&(n.style.display="none"),e.target==c&&(c.style.display="none",document.getElementById("projectName").value=""),e.target==g&&(g.style.display="none"),e.target==h&&(h.style.display="none")},L.onclick=function(){(()=>{let e=document.getElementById("taskNameInput").value,t=document.getElementById("descriptionInput").value,o=document.getElementById("dateInput").value,l=document.getElementById("priorityInput").value,n=document.getElementById("projectInput").value,r=new I(e,t,o,l,n);E.masterList.push(r),"Low"===r.priority&&E.lowPrio.push(r),"Medium"===r.priority&&E.medPrio.push(r),"High"===r.priority&&E.highPrio.push(r),console.log(E.isSorted),console.log(E.viewingProjects),!1===E.viewingProjects&&(!1===E.isSorted?i():d()),((e,t)=>{let o="task-"+e,l=JSON.stringify(t);localStorage.setItem(o,l)})(E.masterList.indexOf(r),r),y()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},f.onchange=function(){console.log("here");let e=f.value;d(e)},k.onclick=function(){(()=>{let e=document.getElementById("projectName").value;E.projects.push(e),((e,t)=>{let o="project-"+e;localStorage.setItem(o,t)})(E.projects.indexOf(e),e),y(),1==E.viewingProjects&&u()})(),c.style.display="none",document.getElementById("projectName").value="",r()},j.onclick=function(){E.viewingProjects=!0,o(),s(),(()=>{let e=document.getElementById("task-table"),t=["Project Name",""],o=document.createElement("tr");e.prepend(o);for(let e=0;e<t.length;e++){let l=document.createElement("th");l.innerHTML=t[e],o.appendChild(l)}})(),a()},B.onclick=function(){E.viewingProjects=!1,s(),m(),e(E.masterList)},b.onclick=function(){E.viewingProjects=!1,s(),m(),e(E.masterList.filter((e=>1==e.complete)))},v.onclick=function(){E.viewingProjects=!1,s(),m(),e(E.masterList.filter((e=>0==e.complete)))}})(),r()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,