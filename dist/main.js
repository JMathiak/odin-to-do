(()=>{"use strict";const e=()=>{let e=localStorage.getItem("task-3");console.log(e)},t={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None"]},o=()=>{t.highPrio=t.masterList.filter((e=>"High"===e.priority)),t.medPrio=t.masterList.filter((e=>"Medium"===e.priority)),t.lowPrio=t.masterList.filter((e=>"Low"===e.priority))},l=e=>{let t=["Task Name","Description","Project","Due Date","Priority",""],o=document.getElementById("task-table"),l=document.createElement("tr");o.prepend(l);for(let e=0;e<t.length;e++){let o=document.createElement("th");o.innerHTML=t[e],l.appendChild(o)}for(let t=0;t<e.length;t++)n(t,e);const i=document.getElementsByClassName("del-btn");console.log(i);for(let e=0;e<i.length;e++)console.log("here"),i[e].addEventListener("click",d);const s=document.getElementsByClassName("edit-btn");for(let e=0;e<s.length;e++)s[e].addEventListener("click",p);const a=document.getElementsByClassName("comp-btn");for(let e=0;e<a.length;e++)console.log(a[e].id),a[e].id,a[e].addEventListener("click",r)},n=(e,t)=>{let o=document.querySelector("#task-table-body"),l=t[e].id,n=document.createElement("tr");1==t[e].complete&&n.classList.add("complete"),n.setAttribute("data-key",l),n.id="task-"+l,n.classList.add("task-item");let i=document.createElement("td");i.innerHTML=t[e].taskName,n.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let r=document.createElement("td");r.innerHTML=t[e].project,n.appendChild(r);let s=document.createElement("td");s.innerHTML=t[e].dueDate,n.appendChild(s);let a=document.createElement("td");a.innerHTML=t[e].priority,n.appendChild(a);let c=document.createElement("td");c.setAttribute("data-key",l);let m=document.createElement("button"),u=document.createElement("button");c.appendChild(u),u.setAttribute("type","button"),u.innerHTML='<i class="fa-solid fa-check"></i>',u.classList.add("comp-btn"),u.id=l,c.appendChild(m),m.setAttribute("type","button"),m.innerHTML='<i class="fa-solid fa-trash"></i>',m.classList.add("del-btn");let p=document.createElement("button");c.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-pencil"></i>',p.classList.add("edit-btn"),n.appendChild(c),o.appendChild(n)},i=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},d=e=>{let l=e.target.parentNode.parentNode.getAttribute("data-key");console.log("here",l);let n=t.masterList.filter((e=>e.id!=l));t.masterList=n,o(),s();let i="task-"+l;localStorage.removeItem(i)},r=e=>{console.log("Complete Task");let o=e.target.parentNode.parentNode.getAttribute("data-key");console.log(o);let l='[data-key="'+o+'"]',n=document.querySelector(l);console.log(n);for(let e=0;e<t.masterList.length;e++)t.masterList[e].id==o&&(!1===t.masterList[e].complete?(n.classList.add("complete"),t.masterList[e].complete=!0):!0===t.masterList[e].complete&&(n.classList.remove("complete"),t.masterList[e].complete=!1));console.log(n.classList)},s=()=>{i(),m(),l(t.masterList)},a=e=>{if(m(),"default"===e&&(i(),l(t.masterList)),"lowToHigh"===e&&(i(),l(t.lowPrio),l(t.medPrio),l(t.highPrio)),"highToLow"===e&&(i(),l(t.highPrio),l(t.medPrio),l(t.lowPrio)),"projectSorting"===e){i();for(let e=0;e<t.projects.length;e++){let o=t.masterList.filter((o=>o.project==t.projects[e]));console.log(o),l(o.filter((e=>"High"===e.priority))),l(o.filter((e=>"Medium"===e.priority))),l(o.filter((e=>"Low"===e.priority)))}}},c=()=>{let e=document.getElementById("projectInput"),o=document.getElementById("projectEdit");for(;e.childNodes.length>2;)e.removeChild(e.lastChild);for(;o.childNodes.length>2;)o.removeChild(o.lastChild);for(let o=0;o<t.projects.length;o++){let l=document.createElement("option");l.value=t.projects[o],l.innerHTML=t.projects[o],e.appendChild(l)}for(let e=0;e<t.projects.length;e++){let l=document.createElement("option");l.value=t.projects[e],l.innerHTML=t.projects[e],o.appendChild(l)}},m=()=>{let e=document.getElementById("task-table");e.removeChild(e.firstChild)},u=function(e,t,o,l,n){this.taskName=e,this.description=t,this.dueDate=o,this.priority=l,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},p=e=>{let o=document.getElementById("editModal");o.style.display="block";let l=e.target.parentNode.parentNode.getAttribute("data-key"),n=0;for(let e=0;e<t.masterList.length;e++)console.log("TDL ID",t.masterList[e].id),l==t.masterList[e].id&&(n=e);console.log("id ",l),console.log("index ",n),document.getElementById("taskNameEdit").value=t.masterList[n].taskName,document.getElementById("descriptionEdit").value=t.masterList[n].description,document.getElementById("dateEdit").value=t.masterList[n].dueDate,document.getElementById("priorityEdit").value=t.masterList[n].priority,document.getElementById("projectEdit").value=t.masterList[n].project,document.getElementById("submit-edit-btn").onclick=function(){t.masterList[n].taskName=document.getElementById("taskNameEdit").value,t.masterList[n].description=document.getElementById("descriptionEdit").value,t.masterList[n].dueDate=document.getElementById("dateEdit").value,t.masterList[n].priority=document.getElementById("priorityEdit").value,t.masterList[n].project=document.getElementById("projectEdit").value,t.highPrio=t.masterList.filter((e=>"High"===e.priority)),t.medPrio=t.masterList.filter((e=>"Medium"===e.priority)),t.lowPrio=t.masterList.filter((e=>"Low"===e.priority)),s(),o.style.display="none";let e="task-"+n;localStorage.removeItem(e),localStorage.setItem(e,JSON.stringify(t.masterList[n]))}},g=()=>{document.getElementById("task-table-body");for(let e=0;e<t.projects.length;e++)y(e);const e=document.getElementsByClassName("del-btn");for(let t=0;t<e.length;t++)e[t].addEventListener("click",I);const o=document.getElementsByClassName("edit-btn");for(let e=0;e<o.length;e++)o[e].addEventListener("click",L)},y=e=>{let o=document.querySelector("#task-table-body"),l=document.createElement("tr");l.setAttribute("data-key",e),l.id="task-"+e,l.classList.add("task-item");let n=document.createElement("td");n.innerHTML=t.projects[e],l.appendChild(n);let i=document.createElement("td");i.id=e,i.setAttribute("data-key",e);let d=document.createElement("button");i.appendChild(d),d.setAttribute("type","button"),d.innerHTML='<i class="fa-solid fa-trash"></i>',d.classList.add("del-btn"),d.id=e;let r=document.createElement("button");i.appendChild(r),r.setAttribute("type","button"),r.innerHTML='<i class="fa-solid fa-pencil"></i>',r.classList.add("edit-btn"),r.id=e,l.appendChild(i),o.appendChild(l)},E=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},h=()=>{E(),g()},I=e=>{let o=e.target.parentNode.id;console.log(o);let l=t.projects[o];console.log(l);let n=t.projects.filter((e=>e!=l));t.projects=n,h();let i="project-"+o;localStorage.removeItem(i)},L=e=>{let o=document.getElementById("editProjectModal");o.style.display="block",console.log(o);let l=e.target.parentNode.id;console.log(e.target.parentNode);let n=t.projects[l];document.getElementById("editProjectName").value=n,document.getElementById("submit-project-edit-btn").onclick=function(){t.projects[l]=document.getElementById("editProjectName").value;let e=document.getElementById("editProjectName").value;for(let o=0;o<t.masterList.length;o++)t.masterList[o].project===n&&(t.masterList[o].project=e);o.style.display="none",h();let i="project-"+l;localStorage.removeItem(i),localStorage.setItem(i,t.projects[l])}};Object.keys(localStorage).forEach((function(e){if(console.log(localStorage.getItem(e)),e.includes("task")){const o=JSON.parse(localStorage.getItem(e));console.log(o);let l=new u(o.taskName,o.description,o.dueDate,o.priority,o.project);t.masterList.push(l)}e.includes("project")&&t.projects.push(localStorage.getItem(e))})),o(),l(t.masterList),(()=>{let o=document.getElementById("taskModal"),n=document.getElementById("newTaskBtn"),d=document.getElementById("editModal"),r=document.getElementById("projectModal"),p=document.getElementById("newProject"),y=document.getElementById("sortModal"),h=document.getElementById("editProjectModal");p.onclick=function(){r.style.display="block"},n.onclick=function(){o.style.display="block"},window.onclick=function(e){e.target==o&&(console.log("close modal"),o.style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0),e.target==d&&(d.style.display="none"),e.target==r&&(r.style.display="none",document.getElementById("projectName").value=""),e.target==y&&(y.style.display="none"),e.target==h&&(h.style.display="none")},document.getElementById("submit-task-btn").onclick=function(){(()=>{let o=document.getElementById("taskNameInput").value,l=document.getElementById("descriptionInput").value,n=document.getElementById("dateInput").value,i=document.getElementById("priorityInput").value,d=document.getElementById("projectInput").value,r=new u(o,l,n,i,d);t.masterList.push(r),"Low"===r.priority&&t.lowPrio.push(r),"Medium"===r.priority&&t.medPrio.push(r),"High"===r.priority&&t.highPrio.push(r),console.log(t.isSorted),!1===t.isSorted?s():a(),((e,t)=>{let o="task-"+e,l=JSON.stringify(t);localStorage.setItem(o,l)})(t.masterList.indexOf(r),r),e()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0};let I=document.getElementById("sortType");I.onchange=function(){console.log("here");let e=I.value;a(e)},document.getElementById("submit-project-btn").onclick=function(){(()=>{let o=document.getElementById("projectName").value;t.projects.push(o),((e,t)=>{let o="project-"+e;localStorage.setItem(o,t)})(t.projects.indexOf(o),o),e()})(),r.style.display="none",document.getElementById("projectName").value="",c()},document.getElementById("project-view").onclick=function(){i(),m(),(()=>{let e=document.getElementById("task-table"),t=["Project Name",""],o=document.createElement("tr");e.prepend(o);for(let e=0;e<t.length;e++){let l=document.createElement("th");l.innerHTML=t[e],o.appendChild(l)}})(),g()},document.getElementById("all-tasks").onclick=function(){m(),E(),l(t.masterList)},document.getElementById("complete-tasks").onclick=function(){m(),E(),l(t.masterList.filter((e=>1==e.complete)))},document.getElementById("incomplete-tasks").onclick=function(){m(),E(),l(t.masterList.filter((e=>0==e.complete)))}})(),c()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,