(()=>{"use strict";const e={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None","Pulls","Ascension"]},t=()=>{e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority))},o=e=>{for(let t=0;t<e.length;t++)i(t,e);const t=document.getElementsByClassName("del-btn");console.log(t);for(let e=0;e<t.length;e++)console.log("here"),t[e].addEventListener("click",l);const o=document.getElementsByClassName("edit-btn");for(let e=0;e<o.length;e++)o[e].addEventListener("click",a)},i=(e,t)=>{let o=document.querySelector("#task-table-body"),i=t[e].id,n=document.createElement("tr");n.setAttribute("data-key",i);let l=document.createElement("td");l.innerHTML=t[e].taskName,n.appendChild(l);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let r=document.createElement("td");r.innerHTML=t[e].project,n.appendChild(r);let s=document.createElement("td");s.innerHTML=t[e].dueDate,n.appendChild(s);let a=document.createElement("td");a.innerHTML=t[e].priority,n.appendChild(a);let m=document.createElement("td"),c=document.createElement("button");m.appendChild(c),c.setAttribute("type","button"),c.innerHTML="Delete",c.classList.add("del-btn");let u=document.createElement("button");m.appendChild(u),u.setAttribute("type","button"),u.innerHTML="Edit",u.classList.add("edit-btn"),n.appendChild(m),o.appendChild(n)},n=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},l=o=>{let i=o.target.parentNode.parentNode.getAttribute("data-key");console.log("here",i);let n=e.masterList.filter((e=>e.id!=i));e.masterList=n,t(),d(),console.log(e.highPrio),console.log(e.medPrio),console.log(e.lowPrio)},d=()=>{n(),o(e.masterList)},r=()=>{!0===e.isSorted?(n(),o(e.highPrio),o(e.medPrio),o(e.lowPrio)):!1===e.isSorted&&d()},s=function(e,t,o,i,n){this.taskName=e,this.description=t,this.dueDate=o,this.priority=i,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},a=t=>{let o=document.getElementById("editModal");o.style.display="block";let i=t.target.parentNode.parentNode.getAttribute("data-key"),n=0;for(let t=0;t<e.masterList.length;t++)console.log("TDL ID",e.masterList[t].id),i==e.masterList[t].id&&(n=t);console.log("id ",i),console.log("index ",n),document.getElementById("taskNameEdit").value=e.masterList[n].taskName,document.getElementById("descriptionEdit").value=e.masterList[n].description,document.getElementById("dateEdit").value=e.masterList[n].dueDate,document.getElementById("priorityEdit").value=e.masterList[n].priority,document.getElementById("projectEdit").value=e.masterList[n].project,document.getElementById("submit-edit-btn").onclick=function(){e.masterList[n].taskName=document.getElementById("taskNameEdit").value,e.masterList[n].description=document.getElementById("descriptionEdit").value,e.masterList[n].dueDate=document.getElementById("dateEdit").value,e.masterList[n].priority=document.getElementById("priorityEdit").value,e.masterList[n].project=document.getElementById("projectEdit").value,e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority)),d(),o.style.display="none"}};console.log(e.masterList);let m=new s("Roll for Yelan","Pull Yelan bc mommy","5/10/22","Medium","Pulls");e.masterList.push(m);let c=new s("Roll for Ayaka","Use all means necessary to pull Ayaka","4/19/22","High","Pulls");e.masterList.push(c);let u=new s("Roll for Ayato"," pull Ayato","4/19/22","Low","Pulls");e.masterList.push(u),t(),o(e.masterList),(()=>{let t=document.getElementById("taskModal"),o=document.getElementById("newTaskBtn"),i=document.getElementById("editModal");o.onclick=function(){t.style.display="block"},window.onclick=function(e){e.target==t&&(console.log("close modal"),t.style.display="none"),e.target==i&&(i.style.display="none")},document.getElementById("submit-task-btn").onclick=function(){(()=>{let t=document.getElementById("taskNameInput").value,o=document.getElementById("descriptionInput").value,i=document.getElementById("dateInput").value,n=document.getElementById("priorityInput").value,l=new s(t,o,i,n,"default");e.masterList.push(l),"Low"===l.priority&&e.lowPrio.push(l),"Medium"===l.priority&&e.medPrio.push(l),"High"===l.priority&&e.highPrio.push(l),console.log(e.isSorted),!1===e.isSorted?d():r()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},document.getElementById("sortTaskBtn").onclick=function(){e.isSorted=!e.isSorted,console.log(e.isSorted),r()}})(),(()=>{console.log("Render Projs");let t=document.getElementById("projectInput"),o=document.getElementById("projectEdit");for(let i=0;i<e.projects.length;i++){let n=document.createElement("option");n.value=e.projects[i],n.innerHTML=e.projects[i],t.appendChild(n),o.appendChild(n)}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUcxQ3BFLFNBQVNpRCxlQUFlLGVBQzlCSyxRQUFVLFdBQ25CdkUsRUFBU0ssVUFBWUwsRUFBU0ssU0FDOUJjLFFBQVFDLElBQUlwQixFQUFTSyxVQUNyQnFELE1EVEosR0YwRXVCLE1BQ3JCdkMsUUFBUUMsSUFBSSxnQkFDWixJQUFJa0UsRUFBVXJFLFNBQVNpRCxlQUFlLGdCQUNsQ3FCLEVBQWN0RSxTQUFTaUQsZUFBZSxlQUMxQyxJQUFLLElBQUlyRCxFQUFJLEVBQUdBLEVBQUliLEVBQVNNLFNBQVNRLE9BQVFELElBQUssQ0FDakQsSUFBSTJFLEVBQU12RSxTQUFTZSxjQUFjLFVBQ2pDd0QsRUFBSWxCLE1BQVF0RSxFQUFTTSxTQUFTTyxHQUM5QjJFLEVBQUlyRCxVQUFZbkMsRUFBU00sU0FBU08sR0FDbEN5RSxFQUFRakQsWUFBWW1ELEdBQ3BCRCxFQUFZbEQsWUFBWW1ELEtFbEY1QkMsSSIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tdG8tZG8vLi9zcmMvbW9kdWxlcy9saXN0LmpzIiwid2VicGFjazovL29kaW4tdG8tZG8vLi9zcmMvbW9kdWxlcy9jb250ZW50LmpzIiwid2VicGFjazovL29kaW4tdG8tZG8vLi9zcmMvbW9kdWxlcy90b2RvLmpzIiwid2VicGFjazovL29kaW4tdG8tZG8vLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vb2Rpbi10by1kby8uL3NyYy9tb2R1bGVzL2J1dHRvbnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgVG9Eb0xpc3QgPSAoKCkgPT4ge1xyXG4gIGxldCBpc1NvcnRlZCA9IGZhbHNlO1xyXG4gIGxldCBtYXN0ZXJMaXN0ID0gW107XHJcbiAgbGV0IGxvd1ByaW8gPSBbXTtcclxuICBsZXQgbWVkUHJpbyA9IFtdO1xyXG4gIGxldCBoaWdoUHJpbyA9IFtdO1xyXG4gIGxldCBwcm9qZWN0cyA9IFtcIk5vbmVcIiwgXCJQdWxsc1wiLCBcIkFzY2Vuc2lvblwiXTtcclxuICByZXR1cm4geyBtYXN0ZXJMaXN0LCBsb3dQcmlvLCBtZWRQcmlvLCBoaWdoUHJpbywgaXNTb3J0ZWQsIHByb2plY3RzIH07XHJcbn0pKCk7XHJcblxyXG5jb25zdCBzZXRQcmlvQXJyYXlzID0gKCkgPT4ge1xyXG4gIFRvRG9MaXN0LmhpZ2hQcmlvID0gVG9Eb0xpc3QubWFzdGVyTGlzdC5maWx0ZXIoXHJcbiAgICAodGFza3MpID0+IHRhc2tzLnByaW9yaXR5ID09PSBcIkhpZ2hcIlxyXG4gICk7XHJcbiAgVG9Eb0xpc3QubWVkUHJpbyA9IFRvRG9MaXN0Lm1hc3Rlckxpc3QuZmlsdGVyKFxyXG4gICAgKHRhc2tzKSA9PiB0YXNrcy5wcmlvcml0eSA9PT0gXCJNZWRpdW1cIlxyXG4gICk7XHJcbiAgVG9Eb0xpc3QubG93UHJpbyA9IFRvRG9MaXN0Lm1hc3Rlckxpc3QuZmlsdGVyKFxyXG4gICAgKHRhc2tzKSA9PiB0YXNrcy5wcmlvcml0eSA9PT0gXCJMb3dcIlxyXG4gICk7XHJcbn07XHJcbmV4cG9ydCB7IFRvRG9MaXN0LCBzZXRQcmlvQXJyYXlzIH07XHJcbiIsImltcG9ydCB7IHNldFByaW9BcnJheXMsIFRvRG9MaXN0IH0gZnJvbSBcIi4vbGlzdFwiO1xyXG5pbXBvcnQgeyBlZGl0VGFzayB9IGZyb20gXCIuL3RvZG9cIjtcclxuY29uc3QgcmVuZGVyVG9Eb3MgPSAoYXJyYXkpID0+IHtcclxuICBmb3IgKGxldCBpID0gMDsgaSA8IGFycmF5Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICByZW5kZXJSb3coaSwgYXJyYXkpO1xyXG4gIH1cclxuICBjb25zdCBkZWxCdG5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImRlbC1idG5cIik7XHJcbiAgY29uc29sZS5sb2coZGVsQnRucyk7XHJcbiAgZm9yIChsZXQgaiA9IDA7IGogPCBkZWxCdG5zLmxlbmd0aDsgaisrKSB7XHJcbiAgICBjb25zb2xlLmxvZyhcImhlcmVcIik7XHJcbiAgICBkZWxCdG5zW2pdLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCByZW1vdmVUYXNrKTtcclxuICB9XHJcblxyXG4gIGNvbnN0IGVkaXRCdG5zID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZShcImVkaXQtYnRuXCIpO1xyXG4gIGZvciAobGV0IGsgPSAwOyBrIDwgZWRpdEJ0bnMubGVuZ3RoOyBrKyspIHtcclxuICAgIGVkaXRCdG5zW2tdLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBlZGl0VGFzayk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgcmVuZGVyUm93ID0gKGksIGFycmF5KSA9PiB7XHJcbiAgbGV0IHRhYmxlQm9keSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFzay10YWJsZS1ib2R5XCIpO1xyXG5cclxuICAvL0RhdGEga2V5PyA8LS0gTmVlZCB0byBhZGQgdGhlIGRhdGEga2V5IHRvIGVhY2ggZGl2LlxyXG4gIGxldCBkayA9IGFycmF5W2ldLmlkO1xyXG4gIGxldCByb3cgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwidHJcIik7XHJcbiAgcm93LnNldEF0dHJpYnV0ZShcImRhdGEta2V5XCIsIGRrKTtcclxuXHJcbiAgbGV0IHRpdGxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRkXCIpO1xyXG4gIHRpdGxlLmlubmVySFRNTCA9IGFycmF5W2ldLnRhc2tOYW1lO1xyXG4gIHJvdy5hcHBlbmRDaGlsZCh0aXRsZSk7XHJcblxyXG4gIGxldCBkZXNjcmlwdGlvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcclxuICBkZXNjcmlwdGlvbi5pbm5lckhUTUwgPSBhcnJheVtpXS5kZXNjcmlwdGlvbjtcclxuICByb3cuYXBwZW5kQ2hpbGQoZGVzY3JpcHRpb24pO1xyXG5cclxuICBsZXQgcHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcclxuICBwcm9qZWN0LmlubmVySFRNTCA9IGFycmF5W2ldLnByb2plY3Q7XHJcbiAgcm93LmFwcGVuZENoaWxkKHByb2plY3QpO1xyXG5cclxuICBsZXQgZHVlRGF0ZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcclxuICBkdWVEYXRlLmlubmVySFRNTCA9IGFycmF5W2ldLmR1ZURhdGU7XHJcbiAgcm93LmFwcGVuZENoaWxkKGR1ZURhdGUpO1xyXG5cclxuICBsZXQgcHJpbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ0ZFwiKTtcclxuICBwcmlvLmlubmVySFRNTCA9IGFycmF5W2ldLnByaW9yaXR5O1xyXG4gIHJvdy5hcHBlbmRDaGlsZChwcmlvKTtcclxuXHJcbiAgLy9OZWVkIHRvIGNyZWF0ZSBidXR0b25zXHJcblxyXG4gIGxldCBidXR0b25zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInRkXCIpO1xyXG4gIGxldCBkZWxCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoZGVsQnRuKTtcclxuICBkZWxCdG4uc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcImJ1dHRvblwiKTtcclxuICBkZWxCdG4uaW5uZXJIVE1MID0gXCJEZWxldGVcIjtcclxuICBkZWxCdG4uY2xhc3NMaXN0LmFkZChcImRlbC1idG5cIik7XHJcbiAgbGV0IGVkaXRCdG4gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIpO1xyXG4gIGJ1dHRvbnMuYXBwZW5kQ2hpbGQoZWRpdEJ0bik7XHJcbiAgZWRpdEJ0bi5zZXRBdHRyaWJ1dGUoXCJ0eXBlXCIsIFwiYnV0dG9uXCIpO1xyXG4gIGVkaXRCdG4uaW5uZXJIVE1MID0gXCJFZGl0XCI7XHJcbiAgZWRpdEJ0bi5jbGFzc0xpc3QuYWRkKFwiZWRpdC1idG5cIik7XHJcbiAgcm93LmFwcGVuZENoaWxkKGJ1dHRvbnMpO1xyXG5cclxuICB0YWJsZUJvZHkuYXBwZW5kQ2hpbGQocm93KTtcclxufTtcclxuXHJcbmNvbnN0IHJlbW92ZVJvd3MgPSAoKSA9PiB7XHJcbiAgbGV0IGNvbnRlbnREaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Rhc2stdGFibGUtYm9keVwiKTtcclxuICB3aGlsZSAoY29udGVudERpdi5maXJzdENoaWxkKSB7XHJcbiAgICBjb250ZW50RGl2LnJlbW92ZUNoaWxkKGNvbnRlbnREaXYuZmlyc3RDaGlsZCk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgcmVtb3ZlVGFzayA9IChlKSA9PiB7XHJcbiAgbGV0IGlkID0gZS50YXJnZXQucGFyZW50Tm9kZS5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZShcImRhdGEta2V5XCIpO1xyXG4gIGNvbnNvbGUubG9nKFwiaGVyZVwiLCBpZCk7XHJcbiAgbGV0IGZpbHRlckFyciA9IFRvRG9MaXN0Lm1hc3Rlckxpc3QuZmlsdGVyKCh0YXNrKSA9PiB0YXNrLmlkICE9IGlkKTtcclxuICBUb0RvTGlzdC5tYXN0ZXJMaXN0ID0gZmlsdGVyQXJyO1xyXG4gIHNldFByaW9BcnJheXMoKTtcclxuICByZWZyZXNoQ29udGVudCgpO1xyXG4gIGNvbnNvbGUubG9nKFRvRG9MaXN0LmhpZ2hQcmlvKTtcclxuICBjb25zb2xlLmxvZyhUb0RvTGlzdC5tZWRQcmlvKTtcclxuICBjb25zb2xlLmxvZyhUb0RvTGlzdC5sb3dQcmlvKTtcclxufTtcclxuXHJcbmNvbnN0IHJlZnJlc2hDb250ZW50ID0gKCkgPT4ge1xyXG4gIHJlbW92ZVJvd3MoKTtcclxuICByZW5kZXJUb0RvcyhUb0RvTGlzdC5tYXN0ZXJMaXN0KTtcclxufTtcclxuXHJcbmNvbnN0IHNvcnRDb250ZW50ID0gKCkgPT4ge1xyXG4gIGlmIChUb0RvTGlzdC5pc1NvcnRlZCA9PT0gdHJ1ZSkge1xyXG4gICAgcmVtb3ZlUm93cygpO1xyXG4gICAgcmVuZGVyVG9Eb3MoVG9Eb0xpc3QuaGlnaFByaW8pO1xyXG4gICAgcmVuZGVyVG9Eb3MoVG9Eb0xpc3QubWVkUHJpbyk7XHJcbiAgICByZW5kZXJUb0RvcyhUb0RvTGlzdC5sb3dQcmlvKTtcclxuICB9IGVsc2UgaWYgKFRvRG9MaXN0LmlzU29ydGVkID09PSBmYWxzZSkge1xyXG4gICAgcmVmcmVzaENvbnRlbnQoKTtcclxuICB9XHJcbn07XHJcblxyXG5jb25zdCByZW5kZXJQcm9qZWN0cyA9ICgpID0+IHtcclxuICBjb25zb2xlLmxvZyhcIlJlbmRlciBQcm9qc1wiKTtcclxuICBsZXQgcHJvakRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdElucHV0XCIpO1xyXG4gIGxldCBlZGl0UHJvakRpdiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvamVjdEVkaXRcIik7XHJcbiAgZm9yIChsZXQgaSA9IDA7IGkgPCBUb0RvTGlzdC5wcm9qZWN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgbGV0IG9wdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJvcHRpb25cIik7XHJcbiAgICBvcHQudmFsdWUgPSBUb0RvTGlzdC5wcm9qZWN0c1tpXTtcclxuICAgIG9wdC5pbm5lckhUTUwgPSBUb0RvTGlzdC5wcm9qZWN0c1tpXTtcclxuICAgIHByb2pEaXYuYXBwZW5kQ2hpbGQob3B0KTtcclxuICAgIGVkaXRQcm9qRGl2LmFwcGVuZENoaWxkKG9wdCk7XHJcbiAgfVxyXG59O1xyXG5leHBvcnQgeyByZW5kZXJUb0RvcywgcmVmcmVzaENvbnRlbnQsIHNvcnRDb250ZW50LCByZW5kZXJQcm9qZWN0cyB9O1xyXG5cclxuLy9Vc2UgcXVlcnkgc2VsZWN0b3IgdG8gZ2V0IGFycmF5IG9mIGRpdnMgdGhhdCBoYXMgdGhlIGRhdGEgYXR0cmlidXRlIEkgd2FudCB0byByZW1vdmVcclxuIiwiaW1wb3J0IHsgVG9Eb0xpc3QgfSBmcm9tIFwiLi9saXN0XCI7XHJcbmltcG9ydCB7IHJlZnJlc2hDb250ZW50LCBzb3J0Q29udGVudCB9IGZyb20gXCIuL2NvbnRlbnRcIjtcclxuXHJcbmNvbnN0IFRvRG8gPSBmdW5jdGlvbiAodGFza05hbWUsIGRlc2NyaXB0aW9uLCBkdWVEYXRlLCBwcmlvcml0eSwgcHJvamVjdCkge1xyXG4gIHRoaXMudGFza05hbWUgPSB0YXNrTmFtZTtcclxuICB0aGlzLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb247XHJcbiAgdGhpcy5kdWVEYXRlID0gZHVlRGF0ZTtcclxuICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XHJcbiAgdGhpcy5jb21wbGV0ZSA9IGZhbHNlO1xyXG4gIHRoaXMucHJvamVjdCA9IHByb2plY3Q7XHJcbiAgdGhpcy5pZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEwMDApO1xyXG59O1xyXG5cclxuY29uc3QgYWRkVG9EbyA9ICgpID0+IHtcclxuICBsZXQgdGFza05hbWUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhc2tOYW1lSW5wdXRcIikudmFsdWU7XHJcbiAgbGV0IHRhc2tEZXNjID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkZXNjcmlwdGlvbklucHV0XCIpLnZhbHVlO1xyXG4gIGxldCB0YXNrRGF0ZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGF0ZUlucHV0XCIpLnZhbHVlO1xyXG4gIGxldCB0YXNrUHJpbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJpb3JpdHlJbnB1dFwiKS52YWx1ZTtcclxuXHJcbiAgbGV0IG5ld1Rhc2sgPSBuZXcgVG9Ebyh0YXNrTmFtZSwgdGFza0Rlc2MsIHRhc2tEYXRlLCB0YXNrUHJpbywgXCJkZWZhdWx0XCIpO1xyXG4gIFRvRG9MaXN0Lm1hc3Rlckxpc3QucHVzaChuZXdUYXNrKTtcclxuICBpZiAobmV3VGFzay5wcmlvcml0eSA9PT0gXCJMb3dcIikge1xyXG4gICAgVG9Eb0xpc3QubG93UHJpby5wdXNoKG5ld1Rhc2spO1xyXG4gIH1cclxuXHJcbiAgaWYgKG5ld1Rhc2sucHJpb3JpdHkgPT09IFwiTWVkaXVtXCIpIHtcclxuICAgIFRvRG9MaXN0Lm1lZFByaW8ucHVzaChuZXdUYXNrKTtcclxuICB9XHJcblxyXG4gIGlmIChuZXdUYXNrLnByaW9yaXR5ID09PSBcIkhpZ2hcIikge1xyXG4gICAgVG9Eb0xpc3QuaGlnaFByaW8ucHVzaChuZXdUYXNrKTtcclxuICB9XHJcbiAgY29uc29sZS5sb2coVG9Eb0xpc3QuaXNTb3J0ZWQpO1xyXG4gIGlmIChUb0RvTGlzdC5pc1NvcnRlZCA9PT0gZmFsc2UpIHtcclxuICAgIHJlZnJlc2hDb250ZW50KCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIHNvcnRDb250ZW50KCk7XHJcbiAgfVxyXG59O1xyXG5cclxuY29uc3QgZWRpdFRhc2sgPSAoZSkgPT4ge1xyXG4gIGxldCBtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZWRpdE1vZGFsXCIpO1xyXG4gIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcImJsb2NrXCI7XHJcblxyXG4gIGxldCBpZCA9IGUudGFyZ2V0LnBhcmVudE5vZGUucGFyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoXCJkYXRhLWtleVwiKTtcclxuICBsZXQgaW5kZXggPSAwO1xyXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgVG9Eb0xpc3QubWFzdGVyTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgY29uc29sZS5sb2coXCJUREwgSURcIiwgVG9Eb0xpc3QubWFzdGVyTGlzdFtpXS5pZCk7XHJcbiAgICBpZiAoaWQgPT0gVG9Eb0xpc3QubWFzdGVyTGlzdFtpXS5pZCkge1xyXG4gICAgICBpbmRleCA9IGk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb25zb2xlLmxvZyhcImlkIFwiLCBpZCk7XHJcbiAgY29uc29sZS5sb2coXCJpbmRleCBcIiwgaW5kZXgpO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza05hbWVFZGl0XCIpLnZhbHVlID1cclxuICAgIFRvRG9MaXN0Lm1hc3Rlckxpc3RbaW5kZXhdLnRhc2tOYW1lO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGVzY3JpcHRpb25FZGl0XCIpLnZhbHVlID1cclxuICAgIFRvRG9MaXN0Lm1hc3Rlckxpc3RbaW5kZXhdLmRlc2NyaXB0aW9uO1xyXG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZGF0ZUVkaXRcIikudmFsdWUgPVxyXG4gICAgVG9Eb0xpc3QubWFzdGVyTGlzdFtpbmRleF0uZHVlRGF0ZTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5RWRpdFwiKS52YWx1ZSA9XHJcbiAgICBUb0RvTGlzdC5tYXN0ZXJMaXN0W2luZGV4XS5wcmlvcml0eTtcclxuICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2plY3RFZGl0XCIpLnZhbHVlID1cclxuICAgIFRvRG9MaXN0Lm1hc3Rlckxpc3RbaW5kZXhdLnByb2plY3Q7XHJcblxyXG4gIGxldCBzYXZlQ2hhbmdlc0J0biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwic3VibWl0LWVkaXQtYnRuXCIpO1xyXG4gIHNhdmVDaGFuZ2VzQnRuLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBUb0RvTGlzdC5tYXN0ZXJMaXN0W2luZGV4XS50YXNrTmFtZSA9XHJcbiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza05hbWVFZGl0XCIpLnZhbHVlO1xyXG4gICAgVG9Eb0xpc3QubWFzdGVyTGlzdFtpbmRleF0uZGVzY3JpcHRpb24gPVxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uRWRpdFwiKS52YWx1ZTtcclxuICAgIFRvRG9MaXN0Lm1hc3Rlckxpc3RbaW5kZXhdLmR1ZURhdGUgPVxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRhdGVFZGl0XCIpLnZhbHVlO1xyXG4gICAgVG9Eb0xpc3QubWFzdGVyTGlzdFtpbmRleF0ucHJpb3JpdHkgPVxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByaW9yaXR5RWRpdFwiKS52YWx1ZTtcclxuICAgIFRvRG9MaXN0Lm1hc3Rlckxpc3RbaW5kZXhdLnByb2plY3QgPVxyXG4gICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2plY3RFZGl0XCIpLnZhbHVlO1xyXG4gICAgVG9Eb0xpc3QuaGlnaFByaW8gPSBUb0RvTGlzdC5tYXN0ZXJMaXN0LmZpbHRlcihcclxuICAgICAgKHRhc2spID0+IHRhc2sucHJpb3JpdHkgPT09IFwiSGlnaFwiXHJcbiAgICApO1xyXG4gICAgVG9Eb0xpc3QubWVkUHJpbyA9IFRvRG9MaXN0Lm1hc3Rlckxpc3QuZmlsdGVyKFxyXG4gICAgICAodGFzaykgPT4gdGFzay5wcmlvcml0eSA9PT0gXCJNZWRpdW1cIlxyXG4gICAgKTtcclxuICAgIFRvRG9MaXN0Lmxvd1ByaW8gPSBUb0RvTGlzdC5tYXN0ZXJMaXN0LmZpbHRlcihcclxuICAgICAgKHRhc2spID0+IHRhc2sucHJpb3JpdHkgPT09IFwiTG93XCJcclxuICAgICk7XHJcblxyXG4gICAgcmVmcmVzaENvbnRlbnQoKTtcclxuICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICB9O1xyXG59O1xyXG5cclxuZXhwb3J0IHsgVG9EbywgYWRkVG9EbywgZWRpdFRhc2sgfTtcclxuLy9Ib3cgdG8gaGFuZGxlIHByb2plY3RzP1xyXG4vL0hhdmUgYW4gb3ZlcmFjcmNoaW5nIGFycmF5IHRoYXQgaG9sZHMgb2JqZWN0cyBhbmQgc3ViYXJyYXlzIGZvciBlYWNoIHByb2plY3Q/IDwtLSBTZWVtcyBsaWtlbHlcclxuLy8gSGF2ZSBhbiBvdmVyYXJjaGluZyBhcnJheSBhbmQgZmlsdGVyIHdoZW4gbmVjZXNzYXJ5IGZvciBwcm9qZWN0c1xyXG4iLCJpbXBvcnQgeyBUb0RvIH0gZnJvbSBcIi4vbW9kdWxlcy90b2RvXCI7XHJcbmltcG9ydCB7IHNldFByaW9BcnJheXMsIFRvRG9MaXN0IH0gZnJvbSBcIi4vbW9kdWxlcy9saXN0XCI7XHJcbmltcG9ydCB7IHJlbmRlclByb2plY3RzLCByZW5kZXJUb0RvcyB9IGZyb20gXCIuL21vZHVsZXMvY29udGVudFwiO1xyXG5pbXBvcnQgaW5pdEJ1dHRvbnMgZnJvbSBcIi4vbW9kdWxlcy9idXR0b25zXCI7XHJcblxyXG5jb25zb2xlLmxvZyhUb0RvTGlzdC5tYXN0ZXJMaXN0KTtcclxubGV0IHRkMiA9IG5ldyBUb0RvKFxyXG4gIFwiUm9sbCBmb3IgWWVsYW5cIixcclxuICBcIlB1bGwgWWVsYW4gYmMgbW9tbXlcIixcclxuICBcIjUvMTAvMjJcIixcclxuICBcIk1lZGl1bVwiLFxyXG4gIFwiUHVsbHNcIlxyXG4pO1xyXG5Ub0RvTGlzdC5tYXN0ZXJMaXN0LnB1c2godGQyKTtcclxubGV0IHRkMSA9IG5ldyBUb0RvKFxyXG4gIFwiUm9sbCBmb3IgQXlha2FcIixcclxuICBcIlVzZSBhbGwgbWVhbnMgbmVjZXNzYXJ5IHRvIHB1bGwgQXlha2FcIixcclxuICBcIjQvMTkvMjJcIixcclxuICBcIkhpZ2hcIixcclxuICBcIlB1bGxzXCJcclxuKTtcclxuVG9Eb0xpc3QubWFzdGVyTGlzdC5wdXNoKHRkMSk7XHJcbmxldCB0ZDMgPSBuZXcgVG9EbyhcIlJvbGwgZm9yIEF5YXRvXCIsIFwiIHB1bGwgQXlhdG9cIiwgXCI0LzE5LzIyXCIsIFwiTG93XCIsIFwiUHVsbHNcIik7XHJcblRvRG9MaXN0Lm1hc3Rlckxpc3QucHVzaCh0ZDMpO1xyXG5zZXRQcmlvQXJyYXlzKCk7XHJcbnJlbmRlclRvRG9zKFRvRG9MaXN0Lm1hc3Rlckxpc3QpO1xyXG5pbml0QnV0dG9ucygpO1xyXG5yZW5kZXJQcm9qZWN0cygpO1xyXG5cclxuLypcclxuTm90ZXM6XHJcbi1PbiBhZGQgdGFzayBmb3JtIG5lZWQgYSBwbGFjZSB0byBzZWxlY3Qgd2hpY2ggcHJvamVjdCB0byBhZGQgdGhlIHRvIGRvIHRvLiBBbGxvdyBmb3IgbXVsdGlwbGUgcHJvamVjdCBzZWxlY3Rpb24gKE1heWJlIG5vdClcclxuLU5lZWQgYW4gZWRpdCB0YXNrIGJ1dHRvbiBvbiBlYWNoIHRhc2sgcm93XHJcbi1OZWVkIHRvIGZpZ3VyZSBvdXQgd2hlcmUgdG8gY3JlYXRlIG5ldyBwcm9qZWN0c1xyXG4tVmlldyBhbGwgdGFza3MgbmVlZHMgdG8gZGlzcGxheSBwcm9qZWN0IG5hbWVzXHJcblxyXG5QbGFuIG9mIGF0dGFjazpcclxuKkFkZCBhIGZldyBkdW1teSB0byBkbyBvYmplY3RzIGFuZCBnZXQgdGhlbSByZW5kZXJpbmcgdG8gdGhlIGRvbVxyXG4qU2V0IHVwIHRoZSBhZGQgdGFzayBidXR0b24gXHJcbi1TZXQgdXAgdGFzayBlZGl0aW5nIDwtLSBNb2RhbCB3aXRoIHRoZSB0YXNrcyBkYXRhIHByZS1maWxsZWQgaW50byBhIGZvcm0uIFxyXG4tLUZldGNoIHRhc2sgYnkgdXNpbmcgcm93IElEIHdoaWNoID09PSB0YXNrIElEIDwtLSBVc2UgZmlsdGVyXHJcbi0tTmVlZCBhIGRpc2NhcmQgY2hhbmdlIGJ1dHRvbiBcclxuLS1OZWVkIGEgc2F2ZSBjaGFuZ2UgYnV0dG9uIFxyXG4qU2V0IHVwIHNvcnRpbmcgXHJcbi0tTWF5YmUgYWRkIHdoaWNoIHdheSB0byBiZSBzb3J0ZWQ/IFN0cmVjaCBnb2FsP1xyXG4qU2V0IHVwIHJldmVydGluZyBzb3J0aW5nIDwtLSBSZSByZW5kZXIgZnJvbSBtYXN0ZXIgYnkgY2hlY2tpbmcgaXNTb3J0aW5nIGZvciBmYWxzZVxyXG4tU2V0IHVwIHByb2plY3RzXHJcbi0tIEFkZCBwcm9qZWN0IGJ1dHRvblxyXG4tLSBBZGQgcHJvamVjdCBzZWxlY3Rpb24gb24gYWRkIHRhc2sgZm9ybVxyXG4tLSBBZGQgcHJvamVjdCB2aWV3c1xyXG4tLSBSZSByZW5kZXIgdGFibGUgd2l0aCBhIGZpbHRlcmVkIGFycmF5IGZvciB0aGUgcHJvamVjdCB0aGV5IHdhbnQgdG8gdmlldy4gXHJcblxyXG4qL1xyXG4iLCJpbXBvcnQgeyBhZGRUb0RvIH0gZnJvbSBcIi4vdG9kb1wiO1xyXG5pbXBvcnQgeyBzb3J0Q29udGVudCB9IGZyb20gXCIuL2NvbnRlbnRcIjtcclxuaW1wb3J0IHsgVG9Eb0xpc3QgfSBmcm9tIFwiLi9saXN0XCI7XHJcbmNvbnN0IGluaXRCdXR0b25zID0gKCkgPT4ge1xyXG4gIGxldCBtb2RhbCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza01vZGFsXCIpO1xyXG4gIGxldCB0YXNrQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJuZXdUYXNrQnRuXCIpO1xyXG4gIGxldCBlZGl0TW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImVkaXRNb2RhbFwiKTtcclxuXHJcbiAgdGFza0J1dHRvbi5vbmNsaWNrID0gZnVuY3Rpb24gKCkge1xyXG4gICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9IFwiYmxvY2tcIjtcclxuICB9O1xyXG4gIHdpbmRvdy5vbmNsaWNrID0gZnVuY3Rpb24gKGV2ZW50KSB7XHJcbiAgICBpZiAoZXZlbnQudGFyZ2V0ID09IG1vZGFsKSB7XHJcbiAgICAgIGNvbnNvbGUubG9nKFwiY2xvc2UgbW9kYWxcIik7XHJcbiAgICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIH1cclxuICAgIGlmIChldmVudC50YXJnZXQgPT0gZWRpdE1vZGFsKSB7XHJcbiAgICAgIGVkaXRNb2RhbC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbiAgICB9XHJcbiAgfTtcclxuICBsZXQgc3VibWl0YnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzdWJtaXQtdGFzay1idG5cIik7XHJcbiAgc3VibWl0YnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBhZGRUb0RvKCk7XHJcbiAgICBsZXQgbW9kYWwgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInRhc2tNb2RhbFwiKTtcclxuICAgIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwidGFza05hbWVJbnB1dFwiKS52YWx1ZSA9IFwiXCI7XHJcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcImRlc2NyaXB0aW9uSW5wdXRcIikudmFsdWUgPSBcIlwiO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJkYXRlSW5wdXRcIikudmFsdWUgPSBcIlwiO1xyXG4gICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJwcmlvcml0eUlucHV0XCIpLnNlbGVjdGVkSW5kZXggPSAwO1xyXG4gIH07XHJcblxyXG4gIGxldCBzb3J0QnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJzb3J0VGFza0J0blwiKTtcclxuICBzb3J0QnV0dG9uLm9uY2xpY2sgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBUb0RvTGlzdC5pc1NvcnRlZCA9ICFUb0RvTGlzdC5pc1NvcnRlZDtcclxuICAgIGNvbnNvbGUubG9nKFRvRG9MaXN0LmlzU29ydGVkKTtcclxuICAgIHNvcnRDb250ZW50KCk7XHJcbiAgfTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGluaXRCdXR0b25zO1xyXG4iXSwibmFtZXMiOlsiVG9Eb0xpc3QiLCJtYXN0ZXJMaXN0IiwibG93UHJpbyIsIm1lZFByaW8iLCJoaWdoUHJpbyIsImlzU29ydGVkIiwicHJvamVjdHMiLCJzZXRQcmlvQXJyYXlzIiwiZmlsdGVyIiwidGFza3MiLCJwcmlvcml0eSIsInJlbmRlclRvRG9zIiwiYXJyYXkiLCJpIiwibGVuZ3RoIiwicmVuZGVyUm93IiwiZGVsQnRucyIsImRvY3VtZW50IiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImNvbnNvbGUiLCJsb2ciLCJqIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZVRhc2siLCJlZGl0QnRucyIsImsiLCJlZGl0VGFzayIsInRhYmxlQm9keSIsInF1ZXJ5U2VsZWN0b3IiLCJkayIsImlkIiwicm93IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsInRpdGxlIiwiaW5uZXJIVE1MIiwidGFza05hbWUiLCJhcHBlbmRDaGlsZCIsImRlc2NyaXB0aW9uIiwicHJvamVjdCIsImR1ZURhdGUiLCJwcmlvIiwiYnV0dG9ucyIsImRlbEJ0biIsImNsYXNzTGlzdCIsImFkZCIsImVkaXRCdG4iLCJyZW1vdmVSb3dzIiwiY29udGVudERpdiIsImZpcnN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImUiLCJ0YXJnZXQiLCJwYXJlbnROb2RlIiwiZ2V0QXR0cmlidXRlIiwiZmlsdGVyQXJyIiwidGFzayIsInJlZnJlc2hDb250ZW50Iiwic29ydENvbnRlbnQiLCJUb0RvIiwidGhpcyIsImNvbXBsZXRlIiwiTWF0aCIsImZsb29yIiwicmFuZG9tIiwibW9kYWwiLCJnZXRFbGVtZW50QnlJZCIsInN0eWxlIiwiZGlzcGxheSIsImluZGV4IiwidmFsdWUiLCJvbmNsaWNrIiwidGQyIiwicHVzaCIsInRkMSIsInRkMyIsInRhc2tCdXR0b24iLCJlZGl0TW9kYWwiLCJ3aW5kb3ciLCJldmVudCIsInRhc2tEZXNjIiwidGFza0RhdGUiLCJ0YXNrUHJpbyIsIm5ld1Rhc2siLCJhZGRUb0RvIiwic2VsZWN0ZWRJbmRleCIsInByb2pEaXYiLCJlZGl0UHJvakRpdiIsIm9wdCIsInJlbmRlclByb2plY3RzIl0sInNvdXJjZVJvb3QiOiIifQ==