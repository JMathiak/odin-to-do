(()=>{"use strict";const e={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None","Pulls","Ascension"]},t=()=>{e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority))},o=e=>{for(let t=0;t<e.length;t++)l(t,e);const t=document.getElementsByClassName("del-btn");console.log(t);for(let e=0;e<t.length;e++)console.log("here"),t[e].addEventListener("click",i);const o=document.getElementsByClassName("edit-btn");for(let e=0;e<o.length;e++)o[e].addEventListener("click",c);const n=document.getElementsByClassName("comp-btn");for(let e=0;e<n.length;e++)console.log(n[e].id),n[e].id,n[e].addEventListener("click",d)},l=(e,t)=>{let o=document.querySelector("#task-table-body"),l=t[e].id,n=document.createElement("tr");n.setAttribute("data-key",l),n.id="task-"+l,n.classList.add("task-item");let i=document.createElement("td");i.innerHTML=t[e].taskName,n.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let s=document.createElement("td");s.innerHTML=t[e].project,n.appendChild(s);let r=document.createElement("td");r.innerHTML=t[e].dueDate,n.appendChild(r);let a=document.createElement("td");a.innerHTML=t[e].priority,n.appendChild(a);let m=document.createElement("td");m.setAttribute("data-key",l);let c=document.createElement("button"),u=document.createElement("button");m.appendChild(u),u.setAttribute("type","button"),u.innerHTML='<i class="fa-solid fa-check"></i>',u.classList.add("comp-btn"),u.id=l,m.appendChild(c),c.setAttribute("type","button"),c.innerHTML='<i class="fa-solid fa-trash"></i>',c.classList.add("del-btn");let p=document.createElement("button");m.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-pencil"></i>',p.classList.add("edit-btn"),n.appendChild(m),o.appendChild(n)},n=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},i=o=>{let l=o.target.parentNode.parentNode.getAttribute("data-key");console.log("here",l);let n=e.masterList.filter((e=>e.id!=l));e.masterList=n,t(),s(),console.log(e.highPrio),console.log(e.medPrio),console.log(e.lowPrio)},d=t=>{console.log("Complete Task");let o=t.target.parentNode.parentNode.getAttribute("data-key");console.log(o);let l='[data-key="'+o+'"]',n=document.querySelector(l);console.log(n);for(let t=0;t<e.masterList.length;t++)e.masterList[t].id==o&&(!1===e.masterList[t].complete?(n.classList.add("complete"),e.masterList[t].complete=!0):!0===e.masterList[t].complete&&(n.classList.remove("complete"),e.masterList[t].complete=!1));console.log(n.classList)},s=()=>{n(),o(e.masterList)},r=t=>{if("default"===t&&(n(),o(e.masterList)),"lowToHigh"===t&&(n(),o(e.lowPrio),o(e.medPrio),o(e.highPrio)),"highToLow"===t&&(n(),o(e.highPrio),o(e.medPrio),o(e.lowPrio)),"projectSorting"===t){n();for(let t=0;t<e.projects.length;t++){let l=e.masterList.filter((o=>o.project==e.projects[t]));console.log(l),o(l.filter((e=>"High"===e.priority))),o(l.filter((e=>"Medium"===e.priority))),o(l.filter((e=>"Low"===e.priority)))}}},a=()=>{let t=document.getElementById("projectInput"),o=document.getElementById("projectEdit");for(;t.childNodes.length>2;)t.removeChild(t.lastChild);for(;o.childNodes.length>2;)o.removeChild(o.lastChild);for(let o=0;o<e.projects.length;o++){let l=document.createElement("option");l.value=e.projects[o],l.innerHTML=e.projects[o],t.appendChild(l)}for(let t=0;t<e.projects.length;t++){let l=document.createElement("option");l.value=e.projects[t],l.innerHTML=e.projects[t],o.appendChild(l)}},m=function(e,t,o,l,n){this.taskName=e,this.description=t,this.dueDate=o,this.priority=l,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},c=t=>{let o=document.getElementById("editModal");o.style.display="block";let l=t.target.parentNode.parentNode.getAttribute("data-key"),n=0;for(let t=0;t<e.masterList.length;t++)console.log("TDL ID",e.masterList[t].id),l==e.masterList[t].id&&(n=t);console.log("id ",l),console.log("index ",n),document.getElementById("taskNameEdit").value=e.masterList[n].taskName,document.getElementById("descriptionEdit").value=e.masterList[n].description,document.getElementById("dateEdit").value=e.masterList[n].dueDate,document.getElementById("priorityEdit").value=e.masterList[n].priority,document.getElementById("projectEdit").value=e.masterList[n].project,document.getElementById("submit-edit-btn").onclick=function(){e.masterList[n].taskName=document.getElementById("taskNameEdit").value,e.masterList[n].description=document.getElementById("descriptionEdit").value,e.masterList[n].dueDate=document.getElementById("dateEdit").value,e.masterList[n].priority=document.getElementById("priorityEdit").value,e.masterList[n].project=document.getElementById("projectEdit").value,e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority)),s(),o.style.display="none"}};console.log(e.masterList);let u=new m("Roll for Yelan","Pull Yelan bc mommy","5/10/22","Medium","Pulls");e.masterList.push(u);let p=new m("Roll for Ayaka","Use all means necessary to pull Ayaka","4/19/22","High","Ascension");e.masterList.push(p);let y=new m("Roll for Ayato"," pull Ayato","4/19/22","Low","Pulls");e.masterList.push(y),t(),o(e.masterList),(()=>{let t=document.getElementById("taskModal"),o=document.getElementById("newTaskBtn"),l=document.getElementById("editModal"),n=document.getElementById("projectModal"),i=document.getElementById("newProject"),d=document.getElementById("sortModal");i.onclick=function(){n.style.display="block"},o.onclick=function(){t.style.display="block"},window.onclick=function(e){e.target==t&&(console.log("close modal"),t.style.display="none"),e.target==l&&(l.style.display="none"),e.target==n&&(n.style.display="none"),e.target==d&&(d.style.display="none")},document.getElementById("submit-task-btn").onclick=function(){(()=>{let t=document.getElementById("taskNameInput").value,o=document.getElementById("descriptionInput").value,l=document.getElementById("dateInput").value,n=document.getElementById("priorityInput").value,i=new m(t,o,l,n,"default");e.masterList.push(i),"Low"===i.priority&&e.lowPrio.push(i),"Medium"===i.priority&&e.medPrio.push(i),"High"===i.priority&&e.highPrio.push(i),console.log(e.isSorted),!1===e.isSorted?s():r()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},document.getElementById("submit-sort-btn").onclick=function(){let e=document.getElementById("sortType").value;r(e),document.getElementById("sortModal").style.display="none",document.getElementById("sortType").selectedIndex=0};let c=document.getElementById("sortType");c.onchange=function(){console.log("here");let e=c.value;r(e)},document.getElementById("submit-project-btn").onclick=function(){(()=>{let t=document.getElementById("projectName").value;e.projects.push(t)})(),n.style.display="none",document.getElementById("projectName").value="",a()}})(),a()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,