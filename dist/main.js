(()=>{"use strict";const e={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None","Pulls","Ascension"]},t=()=>{e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority))},l=e=>{let t=["Task Name","Description","Project","Due Date","Priority",""],l=document.getElementById("task-table"),n=document.createElement("tr");l.prepend(n);for(let e=0;e<t.length;e++){let l=document.createElement("th");l.innerHTML=t[e],n.appendChild(l)}for(let t=0;t<e.length;t++)o(t,e);const s=document.getElementsByClassName("del-btn");console.log(s);for(let e=0;e<s.length;e++)console.log("here"),s[e].addEventListener("click",i);const r=document.getElementsByClassName("edit-btn");for(let e=0;e<r.length;e++)r[e].addEventListener("click",u);const a=document.getElementsByClassName("comp-btn");for(let e=0;e<a.length;e++)console.log(a[e].id),a[e].id,a[e].addEventListener("click",d)},o=(e,t)=>{let l=document.querySelector("#task-table-body"),o=t[e].id,n=document.createElement("tr");1==t[e].complete&&n.classList.add("complete"),n.setAttribute("data-key",o),n.id="task-"+o,n.classList.add("task-item");let i=document.createElement("td");i.innerHTML=t[e].taskName,n.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let s=document.createElement("td");s.innerHTML=t[e].project,n.appendChild(s);let r=document.createElement("td");r.innerHTML=t[e].dueDate,n.appendChild(r);let a=document.createElement("td");a.innerHTML=t[e].priority,n.appendChild(a);let c=document.createElement("td");c.setAttribute("data-key",o);let m=document.createElement("button"),u=document.createElement("button");c.appendChild(u),u.setAttribute("type","button"),u.innerHTML='<i class="fa-solid fa-check"></i>',u.classList.add("comp-btn"),u.id=o,c.appendChild(m),m.setAttribute("type","button"),m.innerHTML='<i class="fa-solid fa-trash"></i>',m.classList.add("del-btn");let p=document.createElement("button");c.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-pencil"></i>',p.classList.add("edit-btn"),n.appendChild(c),l.appendChild(n)},n=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},i=l=>{let o=l.target.parentNode.parentNode.getAttribute("data-key");console.log("here",o);let n=e.masterList.filter((e=>e.id!=o));e.masterList=n,t(),s(),console.log(e.highPrio),console.log(e.medPrio),console.log(e.lowPrio)},d=t=>{console.log("Complete Task");let l=t.target.parentNode.parentNode.getAttribute("data-key");console.log(l);let o='[data-key="'+l+'"]',n=document.querySelector(o);console.log(n);for(let t=0;t<e.masterList.length;t++)e.masterList[t].id==l&&(!1===e.masterList[t].complete?(n.classList.add("complete"),e.masterList[t].complete=!0):!0===e.masterList[t].complete&&(n.classList.remove("complete"),e.masterList[t].complete=!1));console.log(n.classList)},s=()=>{n(),l(e.masterList)},r=t=>{if("default"===t&&(n(),l(e.masterList)),"lowToHigh"===t&&(n(),l(e.lowPrio),l(e.medPrio),l(e.highPrio)),"highToLow"===t&&(n(),l(e.highPrio),l(e.medPrio),l(e.lowPrio)),"projectSorting"===t){n();for(let t=0;t<e.projects.length;t++){let o=e.masterList.filter((l=>l.project==e.projects[t]));console.log(o),l(o.filter((e=>"High"===e.priority))),l(o.filter((e=>"Medium"===e.priority))),l(o.filter((e=>"Low"===e.priority)))}}},a=()=>{let t=document.getElementById("projectInput"),l=document.getElementById("projectEdit");for(;t.childNodes.length>2;)t.removeChild(t.lastChild);for(;l.childNodes.length>2;)l.removeChild(l.lastChild);for(let l=0;l<e.projects.length;l++){let o=document.createElement("option");o.value=e.projects[l],o.innerHTML=e.projects[l],t.appendChild(o)}for(let t=0;t<e.projects.length;t++){let o=document.createElement("option");o.value=e.projects[t],o.innerHTML=e.projects[t],l.appendChild(o)}},c=()=>{let e=document.getElementById("task-table");e.removeChild(e.firstChild)},m=function(e,t,l,o,n){this.taskName=e,this.description=t,this.dueDate=l,this.priority=o,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},u=t=>{let l=document.getElementById("editModal");l.style.display="block";let o=t.target.parentNode.parentNode.getAttribute("data-key"),n=0;for(let t=0;t<e.masterList.length;t++)console.log("TDL ID",e.masterList[t].id),o==e.masterList[t].id&&(n=t);console.log("id ",o),console.log("index ",n),document.getElementById("taskNameEdit").value=e.masterList[n].taskName,document.getElementById("descriptionEdit").value=e.masterList[n].description,document.getElementById("dateEdit").value=e.masterList[n].dueDate,document.getElementById("priorityEdit").value=e.masterList[n].priority,document.getElementById("projectEdit").value=e.masterList[n].project,document.getElementById("submit-edit-btn").onclick=function(){e.masterList[n].taskName=document.getElementById("taskNameEdit").value,e.masterList[n].description=document.getElementById("descriptionEdit").value,e.masterList[n].dueDate=document.getElementById("dateEdit").value,e.masterList[n].priority=document.getElementById("priorityEdit").value,e.masterList[n].project=document.getElementById("projectEdit").value,e.highPrio=e.masterList.filter((e=>"High"===e.priority)),e.medPrio=e.masterList.filter((e=>"Medium"===e.priority)),e.lowPrio=e.masterList.filter((e=>"Low"===e.priority)),s(),l.style.display="none"}},p=()=>{document.getElementById("task-table-body");for(let t=0;t<e.projects.length;t++)y(t);const t=document.getElementsByClassName("del-btn");for(let e=0;e<t.length;e++)t[e].addEventListener("click",h)},y=t=>{let l=document.querySelector("#task-table-body"),o=document.createElement("tr");o.setAttribute("data-key",t),o.id="task-"+t,o.classList.add("task-item");let n=document.createElement("td");n.innerHTML=e.projects[t],o.appendChild(n);let i=document.createElement("td");i.setAttribute("data-key",t);let d=document.createElement("button");i.appendChild(d),d.setAttribute("type","button"),d.innerHTML='<i class="fa-solid fa-trash"></i>',d.classList.add("del-btn"),d.id=t,o.appendChild(i),l.appendChild(o)},g=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},h=t=>{let l=t.target.parentNode.id;console.log(l);let o=e.projects[l];console.log(o);let n=e.projects.filter((e=>e!=o));e.projects=n,g(),p()};console.log(e.masterList);let E=new m("Roll for Yelan","Pull Yelan bc mommy","5/10/22","Medium","Pulls");e.masterList.push(E);let L=new m("Roll for Ayaka","Use all means necessary to pull Ayaka","4/19/22","High","Ascension");e.masterList.push(L);let I=new m("Roll for Ayato"," pull Ayato","4/19/22","Low","Pulls");e.masterList.push(I),t(),l(e.masterList),(()=>{let t=document.getElementById("taskModal"),o=document.getElementById("newTaskBtn"),i=document.getElementById("editModal"),d=document.getElementById("projectModal"),u=document.getElementById("newProject"),y=document.getElementById("sortModal");u.onclick=function(){d.style.display="block"},o.onclick=function(){t.style.display="block"},window.onclick=function(e){e.target==t&&(console.log("close modal"),t.style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0),e.target==i&&(i.style.display="none"),e.target==d&&(d.style.display="none",document.getElementById("projectName").value=""),e.target==y&&(y.style.display="none")},document.getElementById("submit-task-btn").onclick=function(){(()=>{let t=document.getElementById("taskNameInput").value,l=document.getElementById("descriptionInput").value,o=document.getElementById("dateInput").value,n=document.getElementById("priorityInput").value,i=new m(t,l,o,n,"default");e.masterList.push(i),"Low"===i.priority&&e.lowPrio.push(i),"Medium"===i.priority&&e.medPrio.push(i),"High"===i.priority&&e.highPrio.push(i),console.log(e.isSorted),!1===e.isSorted?s():r()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},document.getElementById("submit-sort-btn").onclick=function(){let e=document.getElementById("sortType").value;r(e),document.getElementById("sortModal").style.display="none",document.getElementById("sortType").selectedIndex=0};let h=document.getElementById("sortType");h.onchange=function(){console.log("here");let e=h.value;r(e)},document.getElementById("submit-project-btn").onclick=function(){(()=>{let t=document.getElementById("projectName").value;e.projects.push(t)})(),d.style.display="none",document.getElementById("projectName").value="",a()},document.getElementById("project-view").onclick=function(){n(),c(),(()=>{let e=document.getElementById("task-table"),t=["Project Name",""],l=document.createElement("tr");e.prepend(l);for(let e=0;e<t.length;e++){let o=document.createElement("th");o.innerHTML=t[e],l.appendChild(o)}})(),p()},document.getElementById("all-tasks").onclick=function(){c(),g(),l(e.masterList)},document.getElementById("complete-tasks").onclick=function(){c(),g(),l(e.masterList.filter((e=>1==e.complete)))},document.getElementById("incomplete-tasks").onclick=function(){c(),g(),l(e.masterList.filter((e=>0==e.complete)))}})(),a()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,