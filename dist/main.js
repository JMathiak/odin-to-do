(()=>{"use strict";var e={d:(t,o)=>{for(var l in o)e.o(o,l)&&!e.o(t,l)&&Object.defineProperty(t,l,{enumerable:!0,get:o[l]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{Xp:()=>s,FK:()=>m,ou:()=>n,uB:()=>a});const o={masterList:[],lowPrio:[],medPrio:[],highPrio:[],isSorted:!1,projects:["None","Pulls","Ascension"]},l=()=>{o.highPrio=o.masterList.filter((e=>"High"===e.priority)),o.medPrio=o.masterList.filter((e=>"Medium"===e.priority)),o.lowPrio=o.masterList.filter((e=>"Low"===e.priority))},n=e=>{for(let t=0;t<e.length;t++)i(t,e);const t=document.getElementsByClassName("del-btn");console.log(t);for(let e=0;e<t.length;e++)console.log("here"),t[e].addEventListener("click",r);const o=document.getElementsByClassName("edit-btn");for(let e=0;e<o.length;e++)o[e].addEventListener("click",u)},i=(e,t)=>{let o=document.querySelector("#task-table-body"),l=t[e].id,n=document.createElement("tr");n.setAttribute("data-key",l);let i=document.createElement("td");i.innerHTML=t[e].taskName,n.appendChild(i);let d=document.createElement("td");d.innerHTML=t[e].description,n.appendChild(d);let r=document.createElement("td");r.innerHTML=t[e].project,n.appendChild(r);let s=document.createElement("td");s.innerHTML=t[e].dueDate,n.appendChild(s);let a=document.createElement("td");a.innerHTML=t[e].priority,n.appendChild(a);let m=document.createElement("td"),c=document.createElement("button"),u=document.createElement("button");m.appendChild(u),u.setAttribute("type","button"),u.innerHTML='<i class="fa-solid fa-check"></i>',u.classList.add("comp-btn"),m.appendChild(c),c.setAttribute("type","button"),c.innerHTML='<i class="fa-solid fa-trash"></i>',c.classList.add("del-btn");let p=document.createElement("button");m.appendChild(p),p.setAttribute("type","button"),p.innerHTML='<i class="fa-solid fa-pencil"></i>',p.classList.add("edit-btn"),n.appendChild(m),o.appendChild(n)},d=()=>{let e=document.querySelector("#task-table-body");for(;e.firstChild;)e.removeChild(e.firstChild)},r=e=>{let t=e.target.parentNode.parentNode.getAttribute("data-key");console.log("here",t);let n=o.masterList.filter((e=>e.id!=t));o.masterList=n,l(),s(),console.log(o.highPrio),console.log(o.medPrio),console.log(o.lowPrio)},s=()=>{d(),n(o.masterList)},a=e=>{if("default"===e&&(d(),n(o.masterList)),"lowToHigh"===e&&(d(),n(o.lowPrio),n(o.medPrio),n(o.highPrio)),"highToLow"===e&&(d(),n(o.highPrio),n(o.medPrio),n(o.lowPrio)),"projectSorting"===e){d();for(let e=0;e<o.projects.length;e++){let t=o.masterList.filter((t=>t.project==o.projects[e]));console.log(t),n(t)}}},m=()=>{let e=document.getElementById("projectInput"),t=document.getElementById("projectEdit");for(;e.childNodes.length>2;)e.removeChild(e.lastChild);for(;t.childNodes.length>2;)t.removeChild(t.lastChild);for(let t=0;t<o.projects.length;t++){let l=document.createElement("option");l.value=o.projects[t],l.innerHTML=o.projects[t],e.appendChild(l)}for(let e=0;e<o.projects.length;e++){let l=document.createElement("option");l.value=o.projects[e],l.innerHTML=o.projects[e],t.appendChild(l)}},c=function(e,t,o,l,n){this.taskName=e,this.description=t,this.dueDate=o,this.priority=l,this.complete=!1,this.project=n,this.id=Math.floor(1e3*Math.random())},u=e=>{let t=document.getElementById("editModal");t.style.display="block";let l=e.target.parentNode.parentNode.getAttribute("data-key"),n=0;for(let e=0;e<o.masterList.length;e++)console.log("TDL ID",o.masterList[e].id),l==o.masterList[e].id&&(n=e);console.log("id ",l),console.log("index ",n),document.getElementById("taskNameEdit").value=o.masterList[n].taskName,document.getElementById("descriptionEdit").value=o.masterList[n].description,document.getElementById("dateEdit").value=o.masterList[n].dueDate,document.getElementById("priorityEdit").value=o.masterList[n].priority,document.getElementById("projectEdit").value=o.masterList[n].project,document.getElementById("submit-edit-btn").onclick=function(){o.masterList[n].taskName=document.getElementById("taskNameEdit").value,o.masterList[n].description=document.getElementById("descriptionEdit").value,o.masterList[n].dueDate=document.getElementById("dateEdit").value,o.masterList[n].priority=document.getElementById("priorityEdit").value,o.masterList[n].project=document.getElementById("projectEdit").value,o.highPrio=o.masterList.filter((e=>"High"===e.priority)),o.medPrio=o.masterList.filter((e=>"Medium"===e.priority)),o.lowPrio=o.masterList.filter((e=>"Low"===e.priority)),s(),t.style.display="none"}};console.log(o.masterList);let p=new c("Roll for Yelan","Pull Yelan bc mommy","5/10/22","Medium","Pulls");o.masterList.push(p);let y=new c("Roll for Ayaka","Use all means necessary to pull Ayaka","4/19/22","High","Ascension");o.masterList.push(y);let g=new c("Roll for Ayato"," pull Ayato","4/19/22","Low","Pulls");o.masterList.push(g),l(),n(o.masterList),(()=>{let e=document.getElementById("taskModal"),l=document.getElementById("newTaskBtn"),n=document.getElementById("editModal"),i=document.getElementById("projectModal"),d=document.getElementById("newProject"),r=document.getElementById("sortModal");d.onclick=function(){i.style.display="block"},l.onclick=function(){e.style.display="block"},window.onclick=function(t){t.target==e&&(console.log("close modal"),e.style.display="none"),t.target==n&&(n.style.display="none"),t.target==i&&(i.style.display="none"),t.target==r&&(r.style.display="none")},document.getElementById("submit-task-btn").onclick=function(){(()=>{let e=document.getElementById("taskNameInput").value,t=document.getElementById("descriptionInput").value,l=document.getElementById("dateInput").value,n=document.getElementById("priorityInput").value,i=new c(e,t,l,n,"default");o.masterList.push(i),"Low"===i.priority&&o.lowPrio.push(i),"Medium"===i.priority&&o.medPrio.push(i),"High"===i.priority&&o.highPrio.push(i),console.log(o.isSorted),!1===o.isSorted?s():a()})(),document.getElementById("taskModal").style.display="none",document.getElementById("taskNameInput").value="",document.getElementById("descriptionInput").value="",document.getElementById("dateInput").value="",document.getElementById("priorityInput").selectedIndex=0},document.getElementById("submit-sort-btn").onclick=function(){let e=document.getElementById("sortType").value;a(e),document.getElementById("sortModal").style.display="none",document.getElementById("sortType").selectedIndex=0};let m=document.getElementById("sortType");m.onchange=function(){console.log("here");let e=m.value;a(e)},document.getElementById("submit-project-btn").onclick=function(){(()=>{let e=document.getElementById("projectName").value;o.projects.push(e)})(),i.style.display="none",document.getElementById("projectName").value="",(0,t.renderNewProjects)()}})(),m()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,